[
  {
    "id" : "5c2ed8c8-476e-42ad-a805-3d157f624520",
    "prId" : 591,
    "comments" : [
      {
        "id" : "bc3c045b-3cac-43d4-bddc-c7ed8aefea47",
        "parentId" : null,
        "author" : {
          "login" : "MasseGuillaume",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/921490?u=1ea96b0787a224aed96b7091c354e76d0f55960c&v=4"
        },
        "body" : "@Duhemm @asoltysik \r\nThe issue with this macros is that it depends on the machine it was built on. We would need to publish multiple Scala Native artifacts. IMO it would be better if we could delegate this information gathering to an existing library if it exists.",
        "createdAt" : "2017-03-25T16:23:27Z",
        "updatedAt" : "2017-04-10T21:46:57Z",
        "lastEditedBy" : {
          "login" : "MasseGuillaume",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/921490?u=1ea96b0787a224aed96b7091c354e76d0f55960c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "eb014894-deb9-4f13-93a9-d2f85beb6e8c",
        "parentId" : "bc3c045b-3cac-43d4-bddc-c7ed8aefea47",
        "author" : {
          "login" : "asoltysik",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/17353292?v=4"
        },
        "body" : "I have failed to find one so far, but I will look further.",
        "createdAt" : "2017-03-25T16:37:19Z",
        "updatedAt" : "2017-04-10T21:46:57Z",
        "lastEditedBy" : {
          "login" : "asoltysik",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/17353292?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "27909dc7-68a4-4054-9cf5-74fe98695cc2",
        "parentId" : "bc3c045b-3cac-43d4-bddc-c7ed8aefea47",
        "author" : {
          "login" : "densh",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/320966?u=784f6f761f35b8b7f3f787172b468334d6524524&v=4"
        },
        "body" : "@MasseGuillaume Your comment is incorrect, we do not need to distribute per-platform artefacts for this to work. C files in `nativelib` are distributed as source and compiled on the *target user machine together with the application code*, this means that it can use whatever platform-specific things the platform has as long as those are ifdef guarded to also work on the other platforms. ",
        "createdAt" : "2017-03-27T13:57:49Z",
        "updatedAt" : "2017-04-10T21:46:57Z",
        "lastEditedBy" : {
          "login" : "densh",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/320966?u=784f6f761f35b8b7f3f787172b468334d6524524&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "02211835-330b-492f-9246-e028f906f51d",
        "parentId" : "bc3c045b-3cac-43d4-bddc-c7ed8aefea47",
        "author" : {
          "login" : "densh",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/320966?u=784f6f761f35b8b7f3f787172b468334d6524524&v=4"
        },
        "body" : "@asoltysik Your original code was correct wrt to identifying if something is windows or not. ",
        "createdAt" : "2017-03-27T13:58:31Z",
        "updatedAt" : "2017-04-10T21:46:57Z",
        "lastEditedBy" : {
          "login" : "densh",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/320966?u=784f6f761f35b8b7f3f787172b468334d6524524&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3ad4ebd2-23db-42c2-8172-06c92e993744",
        "parentId" : "bc3c045b-3cac-43d4-bddc-c7ed8aefea47",
        "author" : {
          "login" : "asoltysik",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/17353292?v=4"
        },
        "body" : "@densh Nice! The code is ready to be reviewed then.",
        "createdAt" : "2017-03-27T14:02:37Z",
        "updatedAt" : "2017-04-10T21:46:57Z",
        "lastEditedBy" : {
          "login" : "asoltysik",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/17353292?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a8fbc0ba-4497-441f-9453-6e25a50a3619",
        "parentId" : "bc3c045b-3cac-43d4-bddc-c7ed8aefea47",
        "author" : {
          "login" : "jonas",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/8417?u=fd2f29f433df62751b5690a1bddee04bb4627d21&v=4"
        },
        "body" : "I'd suggest to make this more generic as a first step by using the OS specific #defines to provide a value for the os.name property. Then in Scala this can be mapped to isWindows.",
        "createdAt" : "2017-04-03T12:52:04Z",
        "updatedAt" : "2017-04-10T21:46:57Z",
        "lastEditedBy" : {
          "login" : "jonas",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/8417?u=fd2f29f433df62751b5690a1bddee04bb4627d21&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "14c7734c-4f37-4f87-a20b-295f01633e48",
        "parentId" : "bc3c045b-3cac-43d4-bddc-c7ed8aefea47",
        "author" : {
          "login" : "jonas",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/8417?u=fd2f29f433df62751b5690a1bddee04bb4627d21&v=4"
        },
        "body" : "Similar to this: https://github.com/scala/scala/blob/v2.12.1/src/library/scala/util/Properties.scala#L145-L152",
        "createdAt" : "2017-04-03T18:29:38Z",
        "updatedAt" : "2017-04-10T21:46:57Z",
        "lastEditedBy" : {
          "login" : "jonas",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/8417?u=fd2f29f433df62751b5690a1bddee04bb4627d21&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6714278e-3332-4562-bfa8-7df9676b060e",
        "parentId" : "bc3c045b-3cac-43d4-bddc-c7ed8aefea47",
        "author" : {
          "login" : "densh",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/320966?u=784f6f761f35b8b7f3f787172b468334d6524524&v=4"
        },
        "body" : "@jonas We'll probably go with more comprehensible design in the future, right now it's not meant to be a finished public API yet (that's why it's in runtime namespace.)",
        "createdAt" : "2017-04-11T09:15:17Z",
        "updatedAt" : "2017-04-11T09:15:17Z",
        "lastEditedBy" : {
          "login" : "densh",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/320966?u=784f6f761f35b8b7f3f787172b468334d6524524&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "22a738e8b340af2978ddc4409dc335585fd05dcf",
    "line" : 5,
    "diffHunk" : "@@ -0,0 +1,20 @@\n+#ifdef _WIN32\n+#include <Windows.h>\n+#endif\n+\n+int scalanative_platform_is_windows() {"
  },
  {
    "id" : "be6813df-8106-44ca-8a22-99c71e69d3c2",
    "prId" : 1218,
    "comments" : [
      {
        "id" : "a2140e6f-cb28-464f-a025-aea7372874d2",
        "parentId" : null,
        "author" : {
          "login" : "eatkins",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/2658825?u=8ff05fe0cc4369d7c79d2521ef29f314e11445c2&v=4"
        },
        "body" : "Note that the windows code compiles, but I could not wire things up on my vm to actually get scala native to run on windows.",
        "createdAt" : "2018-07-11T21:06:29Z",
        "updatedAt" : "2018-07-13T17:49:29Z",
        "lastEditedBy" : {
          "login" : "eatkins",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/2658825?u=8ff05fe0cc4369d7c79d2521ef29f314e11445c2&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d570adc9-470d-48a5-b72b-09c4269f057f",
        "parentId" : "a2140e6f-cb28-464f-a025-aea7372874d2",
        "author" : {
          "login" : "densh",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/320966?u=784f6f761f35b8b7f3f787172b468334d6524524&v=4"
        },
        "body" : "If we can't test it, I'm afraid it's a dead and unmaintained code that might or might not work in the future. I think we should cross that bridge when we get there, and not prematurely. ",
        "createdAt" : "2018-07-12T10:46:30Z",
        "updatedAt" : "2018-07-13T17:49:29Z",
        "lastEditedBy" : {
          "login" : "densh",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/320966?u=784f6f761f35b8b7f3f787172b468334d6524524&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "77bcd4f5-debf-465d-a189-1dc12f34de90",
        "parentId" : "a2140e6f-cb28-464f-a025-aea7372874d2",
        "author" : {
          "login" : "eatkins",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/2658825?u=8ff05fe0cc4369d7c79d2521ef29f314e11445c2&v=4"
        },
        "body" : "FWIW, I did add the following to platform.c and compiled it into a stand-alone binary on my windows 10 vm.\r\n```c\r\nstatic void print_prop(const char *name, const char *value) {\r\n  printf(\"Added prop %s %s\\n\", name, value);\r\n}\r\nint main(int argc, char **argv) {\r\n  scalanative_set_os_props(&print_prop)\r\n}\r\n```\r\n\r\nAnd it printed:\r\n```\r\nAdded os.name Windows 8\r\nAdded os.version 6.2\r\nAdded java.io.tmpdir C:\\Users\\ethan\\AppData\\Local\\Temp\r\n```\r\n\r\nThe os is actually wrong because of changes made to GetVersionEx: https://docs.microsoft.com/en-us/windows/desktop/SysInfo/targeting-your-application-at-windows-8-1. To fix, there would have to be a build step that adds a manifest to the generated binary. But at least the os.name prefix is correct and it gets the right temp directory.",
        "createdAt" : "2018-07-12T20:42:30Z",
        "updatedAt" : "2018-07-13T17:49:29Z",
        "lastEditedBy" : {
          "login" : "eatkins",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/2658825?u=8ff05fe0cc4369d7c79d2521ef29f314e11445c2&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ebc13974-fb02-4d67-9547-12a88808dadd",
        "parentId" : "a2140e6f-cb28-464f-a025-aea7372874d2",
        "author" : {
          "login" : "densh",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/320966?u=784f6f761f35b8b7f3f787172b468334d6524524&v=4"
        },
        "body" : "I suggest we drop OS version number detection from this PR completely (i.e. use coarse grained \"Windows\" and \"Mac OS X\"). The implementation needs more discussion and the window for 0.3.8 PRs is closing today.",
        "createdAt" : "2018-07-13T10:26:19Z",
        "updatedAt" : "2018-07-13T17:49:29Z",
        "lastEditedBy" : {
          "login" : "densh",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/320966?u=784f6f761f35b8b7f3f787172b468334d6524524&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "3267429f45ef375cebbc7db837dc98f4f9c2ce82",
    "line" : null,
    "diffHunk" : "@@ -33,3 +46,79 @@ int scalanative_little_endian() {\n     int n = 1;\n     return (*(char *)&n);\n }\n+\n+#ifndef __APPLE__\n+void scalanative_set_os_props(void (*add_prop)(const char *, const char *)) {\n+#ifdef _WIN32"
  }
]