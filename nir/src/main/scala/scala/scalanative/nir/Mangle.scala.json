[
  {
    "id" : "0dc346d3-cd83-438e-b6f6-a6a0ac8834b2",
    "prId" : 1728,
    "comments" : [
      {
        "id" : "4a420d61-e14d-407e-a8db-90fc932b1084",
        "parentId" : null,
        "author" : {
          "login" : "sjrd",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/535934?u=837d8ccc05f624946f9fbec6a81ecb1eb519031b&v=4"
        },
        "body" : "Bikeshedding: perhaps `\"I\"` for \"initializer\"?",
        "createdAt" : "2020-02-20T13:58:36Z",
        "updatedAt" : "2020-04-25T07:45:59Z",
        "lastEditedBy" : {
          "login" : "sjrd",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/535934?u=837d8ccc05f624946f9fbec6a81ecb1eb519031b&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "cf340168e94cc4e2e720946e735664907e6bd955",
    "line" : null,
    "diffHunk" : "@@ -51,6 +51,9 @@ object Mangle {\n         str(\"R\")\n         types.foreach(mangleType)\n         str(\"E\")\n+      case Sig.Clinit() =>\n+        str(\"A\")"
  },
  {
    "id" : "1a15179f-e02b-4eec-a5df-644ae2717a20",
    "prId" : 1840,
    "comments" : [
      {
        "id" : "5f55e6b0-251b-41ed-801c-c203c96eb2d4",
        "parentId" : null,
        "author" : {
          "login" : "sjrd",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/535934?u=837d8ccc05f624946f9fbec6a81ecb1eb519031b&v=4"
        },
        "body" : "So concretely, the problem was that the mangling for something like `id = \"3foo\"` was `43foo`, which was interpreted as a length of `43` and then not enough characters afterwards. Another way to say it is that the encoding was not injective.\r\n\r\nClearly the solution proposed here solves this issue in isolation, but I agree with @LeeTibbert's concerns over backward compat of the IR. I don't think we need to bump the minor IR version *once more*, since we have not released a public version (against which libraries would then be compiled and published) since the last bump. However, we should make sure that we can still read IR that was built by 0.4.0-M2.\r\n\r\n`$` is too common a character; it is generated by the compiler for special characters, so an identifier like `+` is already mangled as `$plus`. We could however use another character that is never emitted by scalac under any circumstance. I suggest to use the character `-` for this purpose. Indeed, if an identifier contains a `-` in user-space, scalac encodes it as `$minus`, so at this point in the pipeline, `id` never contains a `-`. And `-` is a nice separation character: it would produce `4-3foo` for the example above.\r\n\r\nIf you try `-`, either it works and we're happy, or it crashes later because `-` would not be a valid ident for LLVM somewhere inside. In that case we'll have to think more.",
        "createdAt" : "2020-07-09T10:04:48Z",
        "updatedAt" : "2020-07-09T13:55:28Z",
        "lastEditedBy" : {
          "login" : "sjrd",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/535934?u=837d8ccc05f624946f9fbec6a81ecb1eb519031b&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9a9b1b9a-3aad-42a6-a0dc-c4ab0e5bddba",
        "parentId" : "5f55e6b0-251b-41ed-801c-c203c96eb2d4",
        "author" : {
          "login" : "WojciechMazur",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19353690?u=e111c05890b2da4ddec196684a8059d0b99261af&v=4"
        },
        "body" : "It works well with `-` symbol instead of `$`. \r\nOne thing I've noticed there was NIR file generated with name `DigitIdentifiersSuite$1Test$$minus1.nir` for ``` sealed trait `-1` {...}```. I'm not sure can it cause some problems in future. ",
        "createdAt" : "2020-07-09T12:58:46Z",
        "updatedAt" : "2020-07-09T13:55:28Z",
        "lastEditedBy" : {
          "login" : "WojciechMazur",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19353690?u=e111c05890b2da4ddec196684a8059d0b99261af&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "74b50416bb6c9f6348beba9b2fadd4b23f41d63d",
    "line" : null,
    "diffHunk" : "@@ -127,6 +127,7 @@ object Mangle {\n \n     def mangleIdent(id: String): Unit = {\n       str(id.length)\n+      if (id.head.isDigit || id.head == '$') str('$')"
  }
]