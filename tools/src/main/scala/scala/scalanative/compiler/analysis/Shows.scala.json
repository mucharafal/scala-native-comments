[
  {
    "id" : "d15076b9-b419-4dc1-bf49-ada14cb88f21",
    "prId" : 361,
    "comments" : [
      {
        "id" : "fd07596d-0565-44d5-9486-4e687910806d",
        "parentId" : null,
        "author" : {
          "login" : "densh",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/320966?u=784f6f761f35b8b7f3f787172b468334d6524524&v=4"
        },
        "body" : "`block.succ.map(_.to)` can be simplified to `block.pred` after refactoring I've suggested earlier.\n",
        "createdAt" : "2016-11-01T11:42:45Z",
        "updatedAt" : "2016-11-01T17:40:33Z",
        "lastEditedBy" : {
          "login" : "densh",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/320966?u=784f6f761f35b8b7f3f787172b468334d6524524&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "24365788dbd3ff6b4d318c28c5273cecd47a6b12",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,52 @@\n+package scala.scalanative\n+package compiler\n+package analysis\n+\n+import ControlFlow.Block\n+import nir.Shows._\n+\n+object Shows {\n+\n+  private def blockToString(block: Block): String =\n+    showLocal(block.name).toString\n+\n+  def showCFG(cfg: ControlFlow.Graph): String = {\n+    cfg.all.map { block =>\n+      val succStr =\n+        block.succ.map(_.to).map(blockToString).mkString(\"(\", \",\", \")\")"
  },
  {
    "id" : "6dd56527-fbea-4ad4-a5c3-6e5edcd340f4",
    "prId" : 361,
    "comments" : [
      {
        "id" : "13c2767e-3ae9-47d0-a732-656942e310a4",
        "parentId" : null,
        "author" : {
          "login" : "densh",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/320966?u=784f6f761f35b8b7f3f787172b468334d6524524&v=4"
        },
        "body" : "`toSeq`\n",
        "createdAt" : "2016-11-01T11:45:45Z",
        "updatedAt" : "2016-11-01T17:40:33Z",
        "lastEditedBy" : {
          "login" : "densh",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/320966?u=784f6f761f35b8b7f3f787172b468334d6524524&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "24365788dbd3ff6b4d318c28c5273cecd47a6b12",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,52 @@\n+package scala.scalanative\n+package compiler\n+package analysis\n+\n+import ControlFlow.Block\n+import nir.Shows._\n+\n+object Shows {\n+\n+  private def blockToString(block: Block): String =\n+    showLocal(block.name).toString\n+\n+  def showCFG(cfg: ControlFlow.Graph): String = {\n+    cfg.all.map { block =>\n+      val succStr =\n+        block.succ.map(_.to).map(blockToString).mkString(\"(\", \",\", \")\")\n+      val predStr =\n+        block.pred.map(_.from).map(blockToString).mkString(\"(\", \",\", \")\")\n+      s\"${blockToString(block)} -> ${succStr}, pred = ${predStr}\"\n+    }.mkString(\"\\n\")\n+  }\n+\n+  def showDominatorTree(domination: Map[Block, Set[Block]]): String = {\n+    domination.toList"
  }
]